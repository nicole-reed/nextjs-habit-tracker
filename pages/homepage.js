import Head from 'next/head'
import Layout from '../components/layout'
import { useSession, getSession } from "next-auth/react"
import React, { useState, useEffect } from 'react'
import axios from 'axios'

export default function Homepage() {
    const { data: session } = useSession({
        required: true, onUnauthenticated() {
            console.log('in unauthenticated')
        },
    })
    const [habits, setHabits] = useState({})
    const today = new Date().toISOString().slice(0, 10)
    const [log, setLog] = useState({})
    const [habitsCompleted, setHabitsCompleted] = useState([])
    const [isLoading, setLoading] = useState(true)

    const getHabits = async () => {
        try {
            const session = await getSession()
            const res = await axios.get(`/api/users/${session.user.id}/habits`)

            setHabits(res.data.habits)
        } catch (error) {
            console.log(error.message)
        }
    }
    useEffect(() => {
        getHabits()
    }, [session])

    const getLog = async () => {
        try {
            setLoading(true)
            const session = await getSession()
            const logRes = await axios.get(`/api/users/${session.user.id}/logs/${today}`)
            const log = logRes.data.log
            if (log) {
                const habits = Object.keys(log.habitsCompleted)
                setLog(log)
                setHabitsCompleted(habits)
                getHabits()
            }

            setLoading(false)
        } catch (error) {
            console.log(error.message)
        }
    }
    useEffect(() => {
        getLog()
    }, [session])

    const updateLog = async event => {
        try {
            const session = await getSession()
            if (event.target.checked) {
                const reqBody = { habitID: event.target.id, habitName: event.target.name, complete: true }
                await axios.patch(`/api/users/${session.user.id}/logs/${today}`, reqBody)
            } else {
                const reqBody = { habitID: event.target.id, habitName: event.target.name, complete: false }
                await axios.patch(`/api/users/${session.user.id}/logs/${today}`, reqBody)
            }

        } catch (error) {
            console.log(error.message)
        }
    }

    const createLog = async event => {
        try {
            const session = await getSession()
            const reqBody = { habitID: event.target.id, habitName: event.target.name }

            await axios.post(`/api/users/${session.user.id}/logs/${today}`, reqBody)
            getLog()

        } catch (error) {
            console.log(error.message)
        }
    }

    let usersHabits = []
    if (session && habits.length > 0) {

        usersHabits = habits.filter(habit => habit.userid === session.user.id)
    }

    return (
        <div>
            <Head>
                <title>Home</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Layout>


                <main>
                    {isLoading ? '...' :
                        <div>
                            {usersHabits.length > 0 && log ?
                                <div>
                                    <h1 className='habit-list-title'>Today's Habits</h1>
                                    <div className='habits-container'>
                                        <ul className='habits'>
                                            {usersHabits && usersHabits.map((habit) => (

                                                <li className='habit-list' key={habit._id}>
                                                    <label className="habit-name" htmlFor={habit._id}>
                                                        {habit.name} </label>
                                                    <input className='habit-check' id={habit._id} name={habit.name} type="checkbox" defaultChecked={log && habitsCompleted.includes(habit._id) ? true : false} onChange={log._id || habitsCompleted.length > 0 ? updateLog : createLog} />


                                                </li>

                                            ))}
                                        </ul>
                                    </div>
                                </div>
                                :
                                <div>
                                    <h1 className='habit-list-title'>No habits yet...</h1>
                                    <p>Go to your <a href='/settings'>settings</a> page to add some habits!</p>
                                </div>

                            }
                        </div>
                    }
                </main>
            </Layout>
        </div>
    )
}

